include: SuiteSparse:GraphBLAS v7.3.2 [Nov 12, 2022]
library: SuiteSparse:GraphBLAS v7.3.2 [Nov 12, 2022]
nthreads_max: 1
threads to test:  1
matrix: /Users/peng599/local/react-eval/matrices/bcsstk17/bcsstk17.mtx
[.mtx]
Reading matrix market file: /Users/peng599/local/react-eval/matrices/bcsstk17/bcsstk17.mtx
 [ GrB_Matrix_build_FP64 (build) (hyper to sparse) 
   0.0231 sec ]
 [ GrB_transpose (transpose) (6-thread non-atomic bucket transpose) 
   0.00324 sec ]
 [ GrB_eWiseMult emult:(S<.>=S.*S) (iso emult) 
   0.00348 sec ]
 [ GrB_Matrix_nvals 
   0 sec ]
 [ GrB_Matrix_nvals 
   0 sec ]
(iso wait:matrix 0 zombies, 1 pending) (hyper to sparse) (wait:matrix 0 zombies, 1 pending) add:(S<.>=S+H) (wait:matrix 0 zombies, 1 pending) add:(S<.>=S+H) (sparse to bitmap) read time: 0.238872
 [ GrB_assign (C iso assign) (pending: 0) Method 21: (C full) = scalar 
   0.000713 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (nthreads: 6 naslice 192 nbslice 1) (dot F = S'*F) 
   0.00177 sec ]
 [ GrB_assign (C iso assign) (pending: 0) Method 21: (C full) = scalar 
   2.22e-05 sec ]
 [ GrB_mxv C=A'*B, dot_product (dot2) (nthreads: 6 naslice 192 nbslice 1) (dot F = S'*F) 
   6.79e-05 sec ]

------------------------------- threads:  1
(iso wait:matrix 0 zombies, 1 pending) (hyper to sparse)  [ GrB_assign (C iso assign) (pending: 0) Method 05e: (C empty)<M,struct> = scalar 
   0.000356 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 1 mwork 1 (use mask) (intensity: 4.67e-06 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00208 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.39e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000107 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.62e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.98e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000156 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.7e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000122 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000111 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000101 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000102 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000101 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000109 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000103 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000102 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000114 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000128 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000142 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000105 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000106 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.62e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.7e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000106 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.62e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.39e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000115 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.62e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.72e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000106 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000106 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.72e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.72e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000147 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000102 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.62e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.98e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000102 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000103 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000132 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000136 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000234 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.98e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.18e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000118 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000131 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000119 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000114 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000112 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000142 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000142 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00017 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.42e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.18e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.42e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.01e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000104 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000104 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000149 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000126 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000208 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000131 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000137 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000103 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.39e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.58e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000101 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000114 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000246 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000269 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.8e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000114 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000104 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000122 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000157 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000118 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000181 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.72e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000103 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.92e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000274 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000118 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000136 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000217 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000135 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.39e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.98e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000267 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.18e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.98e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000137 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00012 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000111 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000132 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000128 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000126 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000113 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   3.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   5.08e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000188 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000148 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.98e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000101 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.92e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000162 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   5.89e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000102 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.0001 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.88e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000127 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000105 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.92e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00012 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000144 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00013 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000115 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000116 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.72e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.72e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.42e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   6.7e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.49e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   6.2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00015 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000105 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.91e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000184 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000196 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00011 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000117 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.72e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000114 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000132 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000121 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000106 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000121 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   5.2e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000102 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000113 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000124 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000126 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.69e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000151 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.08e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.39e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000101 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   5.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000137 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000128 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.3e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000193 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000203 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.98e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.7e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000124 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   5.89e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000149 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00011 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000115 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.58e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000117 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.92e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00014 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000106 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000126 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000133 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000115 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000129 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000131 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.72e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.42e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000111 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.81e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000122 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.39e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.00017 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.08e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000148 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000106 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000171 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.79e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000109 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000116 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.11e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000152 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000114 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.48e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.08e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000115 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.78e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.98e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000134 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000118 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000124 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.22e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000144 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.8e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.82e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.92e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.0001 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.12e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.7e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000113 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000128 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.7e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000211 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.6e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.3e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.91e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.29e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.92e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.42e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.99e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.5e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.89e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.41e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   3.7e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.48e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000276 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.82e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000124 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.19e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   6.01e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   7.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   2.38e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.79e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   8.7e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   0.000112 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.6e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   9.61e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1.31e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   5.1e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.51e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   1e-05 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.41e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.29e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.22e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.32e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.11e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   7.87e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.39e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   8.82e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
 [ GrB_assign (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   9.06e-06 sec ]
 [ GrB_vxm C<!M>=A*B, saxpy (S{!S} = S*S) axbwork 0 (use mask) (intensity: 0 workspace/(nnz(A)+nnz(B)): 0.0256) (nthreads 1 fine hash: 1) (iso sparse saxpy) (iso wait:matrix 0 zombies, 0 pending, jumbled) 
   4.2e-05 sec ]
parent and level  pushpull trial:  0 threads:  1 src: 0     0.8013 sec
Avg: BFS pushpull parent only  threads   1:   0.801318 sec: /Users/peng599/local/react-eval/matrices/bcsstk17/bcsstk17.mtx
